---
- debug: msg="Starting device credential management test"
- debug: msg="Role Path {{ role_path }}"

- block:
  - name: Load vars and declare dnac vars
    include_vars:
      file: "{{ role_path }}/vars/vars_credential_management.yml"
      name: vars_map
    vars:
      dnac_login: &dnac_login
        dnac_host: "{{ dnac_host }}"
        dnac_username: "{{ dnac_username }}"
        dnac_password: "{{ dnac_password }}"
        dnac_verify: "{{ dnac_verify }}"
        dnac_port: "{{ dnac_port }}"
        dnac_version: "{{ dnac_version }}"
        dnac_debug: "{{ dnac_debug }}"
        dnac_log: true
        dnac_log_level: DEBUG
        config_verify: true

  # - debug:
  #     msg: "{{ vars_map.credentials_details }}"
  # - debug:
  #     msg: "{{ vars_map.credentials_update }}"

#############################################
#            Pre Tests Clean Up             #
#############################################

  - name: Clean up device credentials before test
    cisco.dnac.device_credential_workflow_manager:
      <<: *dnac_login
      state: deleted
      config:
      - "{{ item }}"
    with_list: "{{ vars_map.credentials_details }}"

#############################################
#            Create Credentials             #
#############################################

  - name: Create Credentials
    cisco.dnac.device_credential_workflow_manager:
      <<: *dnac_login
      state: merged
      config:
      - "{{ item }}"
    with_list: "{{ vars_map.credentials_details }}"
    tags: merged
    register: result_create_credentials

  # - name: Debug item
  #   debug:
  #     var: item
  #   loop: "{{ result_create_credentials.results }}"
  #   when: result_create_credentials is defined

  - name: Assert Device Credential Creation
    assert:
      that:
        - item.changed == true
        - "'Created Successfully' in item.response[0].global_credential.Creation.msg"
        - item.response[0].global_credential.Validation == "Success"
    loop: "{{ result_create_credentials.results }}"
    when: result_create_credentials is defined

#############################################
#            Update Credentials             #
#############################################

  - name: Update Credentials
    cisco.dnac.device_credential_workflow_manager:
      <<: *dnac_login
      state: merged
      config:
      - "{{ item }}"
    with_list: "{{ vars_map.credentials_update }}"
    tags: update
    register: result_update_credentials

  # - name: Debug item
  #   debug:
  #     var: item
  #   loop: "{{ result_update_credentials.results }}"
  #   when: result_update_credentials is defined

  - name: Assert Device Credential Update
    assert:
      that:
        - item.changed == true
        - "'Updated Successfully' in item.response[0].global_credential.Updation.msg"
        - item.response[0].global_credential.Validation == "Success"
    loop: "{{ result_update_credentials.results }}"
    when: result_update_credentials is defined

#############################################
#            Delete Credentials             #
#############################################

  - name: Delete Credentials
    cisco.dnac.device_credential_workflow_manager:
      <<: *dnac_login
      state: deleted
      config:
      - "{{ item }}"
    with_list: "{{ vars_map.credentials_details }}"
    tags: deleted
    register: result_delete_credentials

  # - name: Debug item
  #   debug:
  #     var: item
  #   loop: "{{ result_delete_credentials.results }}"
  #   when: result_delete_credentials is defined

  - name: Assert Device Credential Deletion
    assert:
      that:
        - item.changed == true
        - "'Deleted Successfully' in item.response[0].global_credential.Deletion.msg"
        - item.response[0].global_credential.Validation == "Success"
    loop: "{{ result_delete_credentials.results }}"
    when: result_delete_credentials is defined
