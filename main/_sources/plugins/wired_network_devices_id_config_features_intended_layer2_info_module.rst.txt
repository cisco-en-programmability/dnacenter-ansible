
.. Document meta

:orphan:

.. |antsibull-internal-nbsp| unicode:: 0xA0
    :trim:

.. role:: ansible-attribute-support-label
.. role:: ansible-attribute-support-property
.. role:: ansible-attribute-support-full
.. role:: ansible-attribute-support-partial
.. role:: ansible-attribute-support-none
.. role:: ansible-attribute-support-na
.. role:: ansible-option-type
.. role:: ansible-option-elements
.. role:: ansible-option-required
.. role:: ansible-option-versionadded
.. role:: ansible-option-aliases
.. role:: ansible-option-choices
.. role:: ansible-option-choices-default-mark
.. role:: ansible-option-default-bold
.. role:: ansible-option-configuration
.. role:: ansible-option-returned-bold
.. role:: ansible-option-sample-bold

.. Anchors

.. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module:

.. Anchors: short name for ansible.builtin

.. Anchors: aliases



.. Title

cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info module -- Information module for Wired Network Devices Id Config Features Intended Layer2
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. Collection note

.. note::
    This module is part of the `cisco.dnac collection <https://galaxy.ansible.com/cisco/dnac>`_ (version 6.34.0).

    To install it, use: :code:`ansible-galaxy collection install cisco.dnac`.
    You need further requirements to be able to use this module,
    see :ref:`Requirements <ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module_requirements>` for details.

    To use it in a playbook, specify: :code:`cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info`.

.. version_added

.. rst-class:: ansible-version-added

New in cisco.dnac 6.18.0

.. contents::
   :local:
   :depth: 1

.. Deprecated


Synopsis
--------

.. Description

- Get all Wired Network Devices Id Config Features Intended Layer2. - \> This API returns the configurations for the intended layer 2 features on a wired device. Even after the intended configurations are deployed using the API /intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy, they continue to be a part of the intended features on the device.

.. note::
    This module has a corresponding :ref:`action plugin <action_plugins>`.

.. Aliases


.. Requirements

.. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module_requirements:

Requirements
------------
The below requirements are needed on the host that executes this module.

- dnacentersdk \>= 2.4.9
- python \>= 3.5






.. Options

Parameters
----------

.. rst-class:: ansible-option-table

.. list-table::
  :width: 100%
  :widths: auto
  :header-rows: 1

  * - Parameter
    - Comments

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_debug"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_debug:

      .. rst-class:: ansible-option-title

      **dnac_debug**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_debug" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Flag for Cisco DNA Center SDK to enable debugging.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry-default:`false` :ansible-option-choices-default-mark:`← (default)`
      - :ansible-option-choices-entry:`true`


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_host"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_host:

      .. rst-class:: ansible-option-title

      **dnac_host**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_host" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string` / :ansible-option-required:`required`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center hostname.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_password"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_password:

      .. rst-class:: ansible-option-title

      **dnac_password**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_password" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center password to authenticate.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_port"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_port:

      .. rst-class:: ansible-option-title

      **dnac_port**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_port" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`integer`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center port.


      .. rst-class:: ansible-option-line

      :ansible-option-default-bold:`Default:` :ansible-option-default:`443`

      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_username"></div>
        <div class="ansibleOptionAnchor" id="parameter-user"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_username:
      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-user:

      .. rst-class:: ansible-option-title

      **dnac_username**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_username" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-aliases:`aliases: user`

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center username to authenticate.


      .. rst-class:: ansible-option-line

      :ansible-option-default-bold:`Default:` :ansible-option-default:`"admin"`

      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_verify"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_verify:

      .. rst-class:: ansible-option-title

      **dnac_verify**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_verify" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Flag to enable or disable SSL certificate verification.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry:`false`
      - :ansible-option-choices-entry-default:`true` :ansible-option-choices-default-mark:`← (default)`


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_version"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-dnac_version:

      .. rst-class:: ansible-option-title

      **dnac_version**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_version" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Informs the SDK which version of Cisco DNA Center to use.


      .. rst-class:: ansible-option-line

      :ansible-option-default-bold:`Default:` :ansible-option-default:`"2.3.7.6"`

      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-feature"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-feature:

      .. rst-class:: ansible-option-title

      **feature**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-feature" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Feature query parameter. Name of the feature to configure. The API /data/intent/api/wired/networkDevices/{id}/configFeatures/supported/layer2 can be used to get the list of features supported on a device.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-headers"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-headers:

      .. rst-class:: ansible-option-title

      **headers**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-headers" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`dictionary`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Additional headers.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-id"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-id:

      .. rst-class:: ansible-option-title

      **id**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-id" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Id path parameter. Network device ID of the wired device to configure.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-validate_response_schema"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__parameter-validate_response_schema:

      .. rst-class:: ansible-option-title

      **validate_response_schema**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-validate_response_schema" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Flag for Cisco DNA Center SDK to enable the validation of request bodies against a JSON schema.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry:`false`
      - :ansible-option-choices-entry-default:`true` :ansible-option-choices-default-mark:`← (default)`


      .. raw:: html

        </div>


.. Attributes


.. Notes

Notes
-----

.. note::
   - SDK Method used are wired.Wired.get\_configurations\_for\_intended\_layer2\_features\_on\_a\_wired\_device,
   - Paths used are get /dna/intent/api/v1/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2,
   - Supports \ :literal:`check\_mode`\ 
   - The plugin runs on the control node and does not use any ansible connection plugins, but instead the embedded connection manager from Cisco DNAC SDK
   - The parameters starting with dnac\_ are used by the Cisco DNAC Python SDK to establish the connection

.. Seealso

See Also
--------

.. seealso::

   `Cisco DNA Center documentation for Wired GetConfigurationsForIntendedLayer2FeaturesOnAWiredDevice <https://developer.cisco.com/docs/dna-center/#!get-configurations-for-intended-layer-2-features-on-a-wired-device>`_
       Complete reference of the GetConfigurationsForIntendedLayer2FeaturesOnAWiredDevice API.

.. Examples

Examples
--------

.. code-block:: yaml+jinja

    
    ---
    - name: Get all Wired Network Devices Id Config Features
        Intended Layer2
      cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info:
        dnac_host: "{{dnac_host}}"
        dnac_username: "{{dnac_username}}"
        dnac_password: "{{dnac_password}}"
        dnac_verify: "{{dnac_verify}}"
        dnac_port: "{{dnac_port}}"
        dnac_version: "{{dnac_version}}"
        dnac_debug: "{{dnac_debug}}"
        headers: "{{my_headers | from_json}}"
        feature: string
        id: string
      register: result




.. Facts


.. Return values

Return Values
-------------
Common return values are documented :ref:`here <common_return_values>`, the following are the fields unique to this module:

.. rst-class:: ansible-option-table

.. list-table::
  :width: 100%
  :widths: auto
  :header-rows: 1

  * - Key
    - Description

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="return-dnac_response"></div>

      .. _ansible_collections.cisco.dnac.wired_network_devices_id_config_features_intended_layer2_info_module__return-dnac_response:

      .. rst-class:: ansible-option-title

      **dnac_response**

      .. raw:: html

        <a class="ansibleOptionLink" href="#return-dnac_response" title="Permalink to this return value"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`dictionary`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      A dictionary or list with the response returned by the Cisco DNAC Python SDK


      .. rst-class:: ansible-option-line

      :ansible-option-returned-bold:`Returned:` always

      .. rst-class:: ansible-option-line
      .. rst-class:: ansible-option-sample

      :ansible-option-sample-bold:`Sample:` :ansible-rv-sample-value:`{"response": {"features": {"cdpGlobalConfig": {"items": [[{"configType": "string", "holdTime": 0, "isAdvertiseV2Enabled": true, "isCdpEnabled": true, "isLogDuplexMismatchEnabled": true, "timer": 0}]]}, "cdpInterfaceConfig": {"items": [[{"configType": "string", "interfaceName": "string", "isCdpEnabled": true, "isLogDuplexMismatchEnabled": true}]]}, "dhcpSnoopingGlobalConfig": {"items": [[{"configType": "string", "databaseAgent": {"agentUrl": "string", "timeout": 0, "writeDelay": 0}, "isDhcpSnoopingEnabled": true, "isGleaningEnabled": true, "proxyBridgeVlans": "string"}]]}, "dhcpSnoopingInterfaceConfig": {"items": [[{"configType": "string", "interfaceName": "string", "isTrustedInterface": true}]]}, "dot1xGlobalConfig": {"items": [[{"authenticationConfigMode": "string", "configType": "string", "isDot1xEnabled": true}]]}, "dot1xInterfaceConfig": {"items": [[{"authenticationMode": "string", "authenticationOrder": {"configType": "string", "items": ["string"]}, "configType": "string", "inactivityTimer": 0, "interfaceName": "string", "isInactivityTimerFromServerEnabled": true, "isReauthEnabled": true, "isReauthTimerFromServerEnabled": true, "maxReauthRequests": 0, "priority": {"configType": "string", "items": ["string"]}, "reauthTimer": 0, "txPeriod": 0}]]}, "igmpSnoopingGlobalConfig": {"items": [[{"configType": "string", "igmpSnoopingVlanSettings": {"configType": "string", "items": [{"configType": "string", "igmpSnoopingVlanMrouters": {"configType": "string", "items": [{"configType": "string", "interfaceName": "string"}]}, "isIgmpSnoopingEnabled": true, "isImmediateLeaveEnabled": true, "isQuerierEnabled": true, "querierQueryInterval": 0, "vlanId": 0}]}, "isIgmpSnoopingEnabled": true, "isQuerierEnabled": true, "querierQueryInterval": 0, "querierVersion": "string"}]]}, "lldpGlobalConfig": {"items": [[{"configType": "string", "holdTime": 0, "isLldpEnabled": true, "reinitializationDelay": 0, "timer": 0}]]}, "lldpInterfaceConfig": {"items": [[{"adminStatus": "string", "configType": "string", "interfaceName": "string"}]]}, "mabInterfaceConfig": {"items": [[{"configType": "string", "interfaceName": "string", "isMabEnabled": true}]]}, "mldSnoopingGlobalConfig": {"items": [[{"configType": "string", "isMldSnoopingEnabled": true, "isQuerierEnabled": true, "mldSnoopingVlanSettings": {"configType": "string", "items": [{"configType": "string", "isImmediateLeaveEnabled": true, "isMldSnoopingEnabled": true, "isQuerierEnabled": true, "mldSnoopingVlanMrouters": {"configType": "string", "items": [{}]}, "querierQueryInterval": 0, "vlanId": 0}]}, "querierQueryInterval": 0, "querierVersion": "string"}]]}, "portchannelConfig": {"items": [[{"configType": "string", "isAutoEnabled": true, "lacpSystemPriority": 0, "loadBalancingMethod": "string", "portchannels": {"configType": "string", "items": [{"configType": "string", "isLayer2": true, "memberPorts": {"configType": "string", "items": [{}]}, "name": "string"}]}}]]}, "stpGlobalConfig": {"items": [[{"configType": "string", "isBackboneFastEnabled": true, "isBpduFilterEnabled": true, "isBpduGuardEnabled": true, "isEtherChannelGuardEnabled": true, "isExtendedSystemIdEnabled": true, "isLoggingEnabled": true, "isLoopGuardEnabled": true, "isUplinkFastEnabled": true, "portFastMode": "string", "stpInstances": {"configType": "string", "items": [{"configType": "string", "isStpEnabled": true, "priority": 0, "vlanId": 0}]}, "stpMode": "string", "transmitHoldCount": 0, "uplinkFastMaxUpdateRate": 0}]]}, "stpInterfaceConfig": {"items": [[{"bpduFilter": "string", "bpduGuard": "string", "configType": "string", "guardMode": "string", "interfaceName": "string", "pathCost": 0, "portVlanCostSettings": {"configType": "string", "items": [{"configType": "string", "cost": 0, "vlans": "string"}]}, "portVlanPrioritySettings": {"configType": "string", "items": [{"configType": "string", "priority": 0, "vlans": "string"}]}, "priority": 0}]]}, "switchportInterfaceConfig": {"items": [[{"accessVlan": 0, "adminStatus": "string", "configType": "string", "description": "string", "interfaceName": "string", "mode": "string", "nativeVlan": 0, "trunkAllowedVlans": "string"}]]}, "trunkInterfaceConfig": {"items": [[{"configType": "string", "interfaceName": "string", "isDtpNegotiationEnabled": true, "isProtected": true, "pruneEligibleVlans": "string"}]]}, "vlanConfig": {"items": [[{"configType": "string", "isVlanEnabled": true, "name": "string", "vlanId": 0}]]}, "vtpGlobalConfig": {"items": [[{"configType": "string", "configurationFileName": "string", "isPruningEnabled": true, "mode": "string", "sourceInterface": "string", "version": "string"}]]}, "vtpInterfaceConfig": {"items": [[{"configType": "string", "interfaceName": "string", "isVtpEnabled": true}]]}}}, "version": "string"}`


      .. raw:: html

        </div>



..  Status (Presently only deprecated)


.. Authors

Authors
~~~~~~~

- Rafael Campos (@racampos)



.. Extra links

Collection links
~~~~~~~~~~~~~~~~

.. raw:: html

  <p class="ansible-links">
    <a href="https://github.com/cisco-en-programmability/dnacenter-ansible/issues" aria-role="button" target="_blank" rel="noopener external">Issue Tracker</a>
    <a href="https://github.com/cisco-en-programmability/dnacenter-ansible" aria-role="button" target="_blank" rel="noopener external">Repository (Sources)</a>
  </p>

.. Parsing errors

