
.. Document meta

:orphan:

.. |antsibull-internal-nbsp| unicode:: 0xA0
    :trim:

.. role:: ansible-attribute-support-label
.. role:: ansible-attribute-support-property
.. role:: ansible-attribute-support-full
.. role:: ansible-attribute-support-partial
.. role:: ansible-attribute-support-none
.. role:: ansible-attribute-support-na
.. role:: ansible-option-type
.. role:: ansible-option-elements
.. role:: ansible-option-required
.. role:: ansible-option-versionadded
.. role:: ansible-option-aliases
.. role:: ansible-option-choices
.. role:: ansible-option-choices-default-mark
.. role:: ansible-option-default-bold
.. role:: ansible-option-configuration
.. role:: ansible-option-returned-bold
.. role:: ansible-option-sample-bold

.. Anchors

.. _ansible_collections.cisco.dnac.network_devices_info_module:

.. Anchors: short name for ansible.builtin

.. Anchors: aliases



.. Title

cisco.dnac.network_devices_info module -- Information module for Network Devices Info
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. Collection note

.. note::
    This module is part of the `cisco.dnac collection <https://galaxy.ansible.com/cisco/dnac>`_ (version 6.28.0).

    To install it, use: :code:`ansible-galaxy collection install cisco.dnac`.
    You need further requirements to be able to use this module,
    see :ref:`Requirements <ansible_collections.cisco.dnac.network_devices_info_module_requirements>` for details.

    To use it in a playbook, specify: :code:`cisco.dnac.network_devices_info`.

.. version_added

.. rst-class:: ansible-version-added

New in cisco.dnac 6.15.0

.. contents::
   :local:
   :depth: 1

.. Deprecated


Synopsis
--------

.. Description

- This module represents an alias of the module network\_devices\_v1\_info

.. note::
    This module has a corresponding :ref:`action plugin <action_plugins>`.

.. Aliases


.. Requirements

.. _ansible_collections.cisco.dnac.network_devices_info_module_requirements:

Requirements
------------
The below requirements are needed on the host that executes this module.

- dnacentersdk \>= 2.4.9
- python \>= 3.5






.. Options

Parameters
----------

.. rst-class:: ansible-option-table

.. list-table::
  :width: 100%
  :widths: auto
  :header-rows: 1

  * - Parameter
    - Comments

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-attribute"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-attribute:

      .. rst-class:: ansible-option-title

      **attribute**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-attribute" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Attribute query parameter. The List of Network Device model attributes. Please refer to \`\`\`NetworkDeviceAttribute\`\`\` section in the Open API specification document mentioned in the description.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_debug"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_debug:

      .. rst-class:: ansible-option-title

      **dnac_debug**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_debug" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Flag for Cisco DNA Center SDK to enable debugging.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry-default:`false` :ansible-option-choices-default-mark:`← (default)`
      - :ansible-option-choices-entry:`true`


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_host"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_host:

      .. rst-class:: ansible-option-title

      **dnac_host**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_host" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string` / :ansible-option-required:`required`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center hostname.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_password"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_password:

      .. rst-class:: ansible-option-title

      **dnac_password**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_password" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center password to authenticate.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_port"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_port:

      .. rst-class:: ansible-option-title

      **dnac_port**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_port" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`integer`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center port.


      .. rst-class:: ansible-option-line

      :ansible-option-default-bold:`Default:` :ansible-option-default:`443`

      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_username"></div>
        <div class="ansibleOptionAnchor" id="parameter-user"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_username:
      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-user:

      .. rst-class:: ansible-option-title

      **dnac_username**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_username" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-aliases:`aliases: user`

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      The Cisco DNA Center username to authenticate.


      .. rst-class:: ansible-option-line

      :ansible-option-default-bold:`Default:` :ansible-option-default:`"admin"`

      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_verify"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_verify:

      .. rst-class:: ansible-option-title

      **dnac_verify**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_verify" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Flag to enable or disable SSL certificate verification.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry:`false`
      - :ansible-option-choices-entry-default:`true` :ansible-option-choices-default-mark:`← (default)`


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-dnac_version"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-dnac_version:

      .. rst-class:: ansible-option-title

      **dnac_version**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-dnac_version" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Informs the SDK which version of Cisco DNA Center to use.


      .. rst-class:: ansible-option-line

      :ansible-option-default-bold:`Default:` :ansible-option-default:`"2.3.7.6"`

      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-endTime"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-endtime:

      .. rst-class:: ansible-option-title

      **endTime**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-endTime" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`float`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      EndTime query parameter. End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-fabricRole"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-fabricrole:

      .. rst-class:: ansible-option-title

      **fabricRole**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-fabricRole" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      FabricRole query parameter. The list of fabric device role. Examples fabricRole=BORDER, fabricRole=BORDER&fabricRole=EDGE (multiple fabric device roles with & separator) Available values BORDER, EDGE, MAP-SERVER, LEAF, SPINE, TRANSIT-CP, EXTENDED-NODE, WLC, UNIFIED-AP.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-fabricSiteId"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-fabricsiteid:

      .. rst-class:: ansible-option-title

      **fabricSiteId**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-fabricSiteId" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      FabricSiteId query parameter. The fabric site Id or list to fabric site Ids to filter the data This field supports wildcard asterisk (\*) character search support. E.g. \*uuid\*, \*uuid, uuid\* Examples \`?fabricSiteId=fabricSiteUuid) ?fabricSiteId=fabricSiteUuid1&fabricSiteId=fabricSiteUuid2 (multiple fabricSiteIds requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-family"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-family:

      .. rst-class:: ansible-option-title

      **family**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-family" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Family query parameter. The list of network device family names Examples family=Switches and Hubs (single network device family name )family=Switches and Hubs&family=Router&family=Wireless Controller (multiple Network device family names with & separator). This field is not case sensitive.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-headers"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-headers:

      .. rst-class:: ansible-option-title

      **headers**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-headers" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`dictionary`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Additional headers.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-healthScore"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-healthscore:

      .. rst-class:: ansible-option-title

      **healthScore**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-healthScore" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      HealthScore query parameter. The list of entity health score categories Examples healthScore=good, healthScore=good&healthScore=fair (multiple entity healthscore values with & separator). This field is not case sensitive.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-id"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-id:

      .. rst-class:: ansible-option-title

      **id**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-id" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Id query parameter. The list of entity Uuids. (Ex."6bef213c-19ca-4170-8375-b694e251101c") Examples id=6bef213c-19ca-4170-8375-b694e251101c (single entity uuid requested) id=6bef213c-19ca-4170-8375- b694e251101c&id=32219612-819e-4b5e-a96b-cf22aca13dd9&id=2541e9a7-b80d-4955-8aa2-79b233318ba0 (multiple entity uuid with '&' separator).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-l2Vn"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-l2vn:

      .. rst-class:: ansible-option-title

      **l2Vn**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-l2Vn" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      L2Vn query parameter. The L2 Virtual Network Id or list to Virtual Network Ids to filter the data This field supports wildcard asterisk (\*) character search support. E.g. \*uuid\*, \*uuid, uuid\* Examples \`?l2Vn=virtualNetworkId ?l2Vn=virtualNetworkId1&l2Vn=virtualNetworkId2 (multiple virtualNetworkId's requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-l3Vn"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-l3vn:

      .. rst-class:: ansible-option-title

      **l3Vn**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-l3Vn" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      L3Vn query parameter. The L3 Virtual Network Id or list to Virtual Network Ids to filter the data This field supports wildcard asterisk (\*) character search support. E.g. \*uuid\*, \*uuid, uuid\* Examples \`?l3Vn=virtualNetworkId ?l3Vn=virtualNetworkId1&l3Vn=virtualNetworkId2 (multiple virtualNetworkId's requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-limit"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-limit:

      .. rst-class:: ansible-option-title

      **limit**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-limit" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`float`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Limit query parameter. Maximum number of records to return.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-macAddress"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-macaddress:

      .. rst-class:: ansible-option-title

      **macAddress**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-macAddress" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      MacAddress query parameter. The macAddress of the network device or client This field supports wildcard (\`\*\`) character-based search. Ex \`\*AB AB AB\*\` or \`AB AB AB\*\` or \`\*AB AB AB\` Examples \`macAddress=AB AB AB CD CD CD\` (single macAddress requested) \`macAddress=AB AB AB CD CD DC&macAddress=AB AB AB CD CD FE\` (multiple macAddress requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-maintenanceMode"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-maintenancemode:

      .. rst-class:: ansible-option-title

      **maintenanceMode**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-maintenanceMode" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      MaintenanceMode query parameter. The device maintenanceMode status true or false.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry:`false`
      - :ansible-option-choices-entry:`true`


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-managementIpAddress"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-managementipaddress:

      .. rst-class:: ansible-option-title

      **managementIpAddress**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-managementIpAddress" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      ManagementIpAddress query parameter. The list of entity management IP Address. It can be either Ipv4 or Ipv6 address or combination of both(Ex. "121.1.1.10") This field supports wildcard (\`\*\`) character-based search. Ex \`\*1.1\*\` or \`1.1\*\` or \`\*1.1\` Examples managementIpAddresses=121.1.1.10 managementIpAddresses=121.1.1.10&managementIpAddresses=172.20.1.10&managementIpAddresses=200 10&=managementIpAddresses172.20.3.4 (multiple entity IP Address with & separator).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-offset"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-offset:

      .. rst-class:: ansible-option-title

      **offset**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-offset" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`float`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Offset query parameter. Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-order"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-order:

      .. rst-class:: ansible-option-title

      **order**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-order" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Order query parameter. The sort order of the field ascending or descending.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-role"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-role:

      .. rst-class:: ansible-option-title

      **role**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-role" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Role query parameter. The list of network device role. Examples role=CORE, role=CORE&role=ACCESS&role=ROUTER (multiple Network device roles with & separator). This field is not case sensitive.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-serialNumber"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-serialnumber:

      .. rst-class:: ansible-option-title

      **serialNumber**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-serialNumber" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      SerialNumber query parameter. The list of network device serial numbers. This field supports wildcard (\`\*\`) character-based search. Ex \`\*MS1SV\*\` or \`MS1SV\*\` or \`\*MS1SV\` Examples serialNumber=9FUFMS1SVAX serialNumber=9FUFMS1SVAX&FCW2333Q0BY&FJC240617JX(multiple Network device serial number with & separator).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-siteHierarchy"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-sitehierarchy:

      .. rst-class:: ansible-option-title

      **siteHierarchy**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-siteHierarchy" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      SiteHierarchy query parameter. The full hierarchical breakdown of the site tree starting from Global site name and ending with the specific site name. The Root site is named "Global" (Ex. \`Global/AreaName/BuildingName/FloorName\`) This field supports wildcard asterisk (\*) character search support. E.g. \*/San\*, \*/San, /San\* Examples \`?siteHierarchy=Global/AreaName/BuildingName/FloorName\` (single siteHierarchy requested) \`?siteHierarchy=Global/AreaName/BuildingName/FloorName&siteHierarchy=Global/AreaNam e2/BuildingName2/FloorName2\` (multiple siteHierarchies requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-siteHierarchyId"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-sitehierarchyid:

      .. rst-class:: ansible-option-title

      **siteHierarchyId**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-siteHierarchyId" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      SiteHierarchyId query parameter. The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. \`globalUuid/areaUuid/buildingUuid/floorUuid\`) This field supports wildcard asterisk (\*) character search support. E.g. \`\*uuid\*, \*uuid, uuid\* Examples \`?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid \`(single siteHierarchyId requested) \`?siteHiera rchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUu id2\` (multiple siteHierarchyIds requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-siteId"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-siteid:

      .. rst-class:: ansible-option-title

      **siteId**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-siteId" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      SiteId query parameter. The UUID of the site. (Ex. \`flooruuid\`) This field supports wildcard asterisk (\*) character search support. E.g.\*flooruuid\*, \*flooruuid, flooruuid\* Examples \`?siteId=id1\` (single id requested) \`?siteId=id1&siteId=id2&siteId=id3\` (multiple ids requested).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-softwareVersion"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-softwareversion:

      .. rst-class:: ansible-option-title

      **softwareVersion**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-softwareVersion" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      SoftwareVersion query parameter. The list of network device software version This field supports wildcard (\`\*\`) character-based search. Ex \`\*17.8\*\` or \`\*17.8\` or \`17.8\*\` Examples softwareVersion=2.3.4.0 (single network device software version ) softwareVersion=17.9.3.23&softwareVersion=17.7.1.2&softwareVersion=\*.17.7 (multiple Network device software versions with & separator).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-sortBy"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-sortby:

      .. rst-class:: ansible-option-title

      **sortBy**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-sortBy" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      SortBy query parameter. A field within the response to sort by.


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-startTime"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-starttime:

      .. rst-class:: ansible-option-title

      **startTime**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-startTime" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`float`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      StartTime query parameter. Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive. If \`startTime\` is not provided, API will default to current time.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-transitNetworkId"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-transitnetworkid:

      .. rst-class:: ansible-option-title

      **transitNetworkId**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-transitNetworkId" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      TransitNetworkId query parameter. The Transit Network Id or list to Transit Network Ids to filter the data This field supports wildcard asterisk (\*) character search support. E.g. \*uuid\*, \*uuid, uuid\* Examples \`?transitNetworkId=transitNetworkId ?transitNetworkId=transitNetworkuuid1&transitNetworkId=transitNetworkuuid1 (multiple transitNetworkIds requested.
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-type"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-type:

      .. rst-class:: ansible-option-title

      **type**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-type" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Type query parameter. The list of network device type This field supports wildcard (\`\*\`) character-based search. Ex \`\*9407R\*\` or \`\*9407R\` or \`9407R\*\` Examples type=SwitchesCisco Catalyst 9407R Switch (single network device types ) type=Cisco Catalyst 38xx stack-able ethernet switch&type=Cisco 3945 Integrated Services Router G2 (multiple Network device types with & separator).
          


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-validate_response_schema"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-validate_response_schema:

      .. rst-class:: ansible-option-title

      **validate_response_schema**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-validate_response_schema" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`boolean`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      Flag for Cisco DNA Center SDK to enable the validation of request bodies against a JSON schema.


      .. rst-class:: ansible-option-line

      :ansible-option-choices:`Choices:`

      - :ansible-option-choices-entry:`false`
      - :ansible-option-choices-entry-default:`true` :ansible-option-choices-default-mark:`← (default)`


      .. raw:: html

        </div>

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="parameter-view"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__parameter-view:

      .. rst-class:: ansible-option-title

      **view**

      .. raw:: html

        <a class="ansibleOptionLink" href="#parameter-view" title="Permalink to this option"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`string`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      View query parameter. The List of Network Device model views. Please refer to \`\`\`NetworkDeviceView\`\`\` section in the Open API specification document mentioned in the description.
          


      .. raw:: html

        </div>


.. Attributes


.. Notes

Notes
-----

.. note::
   - SDK Method used are devices.Devices.get\_the\_device\_data\_for\_the\_given\_device\_id\_uuid\_v1, devices.Devices.gets\_the\_network\_device\_details\_based\_on\_the\_provided\_query\_parameters\_v1,
   - Paths used are get /dna/data/api/v1/networkDevices, get /dna/data/api/v1/networkDevices/{id},
   - It should be noted that this module is an alias of network\_devices\_v1\_info
   - Supports \ :literal:`check\_mode`\ 
   - The plugin runs on the control node and does not use any ansible connection plugins, but instead the embedded connection manager from Cisco DNAC SDK
   - The parameters starting with dnac\_ are used by the Cisco DNAC Python SDK to establish the connection

.. Seealso

See Also
--------

.. seealso::

   `Cisco DNA Center documentation for Devices GetTheDeviceDataForTheGivenDeviceIdUuidV1 <https://developer.cisco.com/docs/dna-center/#!get-the-device-data-for-the-given-device-id-uuid>`_
       Complete reference of the GetTheDeviceDataForTheGivenDeviceIdUuidV1 API.
   `Cisco DNA Center documentation for Devices GetsTheNetworkDeviceDetailsBasedOnTheProvidedQueryParametersV1 <https://developer.cisco.com/docs/dna-center/#!gets-the-network-device-details-based-on-the-provided-query-parameters>`_
       Complete reference of the GetsTheNetworkDeviceDetailsBasedOnTheProvidedQueryParametersV1 API.

.. Examples

Examples
--------

.. code-block:: yaml+jinja

    
    - name: Get all Network Devices Info
      cisco.dnac.network_devices_info:
        dnac_host: "{{dnac_host}}"
        dnac_username: "{{dnac_username}}"
        dnac_password: "{{dnac_password}}"
        dnac_verify: "{{dnac_verify}}"
        dnac_port: "{{dnac_port}}"
        dnac_version: "{{dnac_version}}"
        dnac_debug: "{{dnac_debug}}"
        headers: "{{my_headers | from_json}}"
        startTime: 0
        endTime: 0
        limit: 0
        offset: 0
        sortBy: string
        order: string
        siteHierarchy: string
        siteHierarchyId: string
        siteId: string
        id: string
        managementIpAddress: string
        macAddress: string
        family: string
        type: string
        role: string
        serialNumber: string
        maintenanceMode: True
        softwareVersion: string
        healthScore: string
        view: string
        attribute: string
        fabricSiteId: string
        l2Vn: string
        l3Vn: string
        transitNetworkId: string
        fabricRole: string
      register: result

    - name: Get Network Devices Info by id
      cisco.dnac.network_devices_info:
        dnac_host: "{{dnac_host}}"
        dnac_username: "{{dnac_username}}"
        dnac_password: "{{dnac_password}}"
        dnac_verify: "{{dnac_verify}}"
        dnac_port: "{{dnac_port}}"
        dnac_version: "{{dnac_version}}"
        dnac_debug: "{{dnac_debug}}"
        headers: "{{my_headers | from_json}}"
        startTime: 0
        endTime: 0
        view: string
        attribute: string
        id: string
      register: result





.. Facts


.. Return values

Return Values
-------------
Common return values are documented :ref:`here <common_return_values>`, the following are the fields unique to this module:

.. rst-class:: ansible-option-table

.. list-table::
  :width: 100%
  :widths: auto
  :header-rows: 1

  * - Key
    - Description

  * - .. raw:: html

        <div class="ansible-option-cell">
        <div class="ansibleOptionAnchor" id="return-dnac_response"></div>

      .. _ansible_collections.cisco.dnac.network_devices_info_module__return-dnac_response:

      .. rst-class:: ansible-option-title

      **dnac_response**

      .. raw:: html

        <a class="ansibleOptionLink" href="#return-dnac_response" title="Permalink to this return value"></a>

      .. rst-class:: ansible-option-type-line

      :ansible-option-type:`dictionary`

      .. raw:: html

        </div>

    - .. raw:: html

        <div class="ansible-option-cell">

      A dictionary or list with the response returned by the Cisco DNAC Python SDK


      .. rst-class:: ansible-option-line

      :ansible-option-returned-bold:`Returned:` always

      .. rst-class:: ansible-option-line
      .. rst-class:: ansible-option-sample

      :ansible-option-sample-bold:`Sample:` :ansible-rv-sample-value:`{"response": {"aggregateAttributes": [{"function": "string", "name": "string", "value": 0}], "apDetails": {"adminState": "string", "apGroup": "string", "apOperationalState": "string", "apType": "string", "connectedTime": 0, "connectedWlcName": "string", "ethernetMac": "string", "flexGroup": "string", "homeApEnabled": true, "icapCapability": "string", "ledFlashEnabled": true, "ledFlashSeconds": 0, "operationalMode": "string", "policyTagName": "string", "powerCalendarProfile": "string", "powerMode": "string", "powerProfile": "string", "powerSaveMode": "string", "powerSaveModeCapable": "string", "powerType": "string", "protocol": "string", "radios": [{"airQuality": 0, "band": "string", "clientCount": 0, "id": "string", "interference": 0, "noise": 0, "trafficUtil": 0, "utilization": 0}], "regulatoryDomain": "string", "resetReason": "string", "rfTagName": "string", "siteTagName": "string", "subMode": "string"}, "clientCount": 0, "collectionStatus": "string", "communicationState": "string", "deviceFamily": "string", "deviceGroupHierarchyId": "string", "deviceRole": "string", "deviceSeries": "string", "deviceType": "string", "fabricDetails": {"fabricRole": ["string"], "fabricSiteId": "string", "fabricSiteName": "string", "l2Vns": ["string"], "l3Vns": ["string"], "networkProtocol": "string", "transitFabrics": ["string"]}, "fabricMetricsDetails": {"aaaStatusScore": 0, "bgpBgpSiteScore": 0, "bgpEvpnScore": 0, "bgpPeerInfraVnScore": 0, "bgpPeerScore": 0, "bgpPubsubSiteScore": 0, "bgpTcpScore": 0, "ctsEnvDataDownloadScore": 0, "fabricSiteScore": 0, "fabricTransitScore": 0, "fabricVnScore": 0, "fabsiteFcpScore": 0, "fabsiteFsconnScore": 0, "fabsiteInfraScore": 0, "internetAvailScore": 0, "lispCpConnScore": 0, "lispTransitConnScore": 0, "mcastScore": 0, "overallFabricScore": 0, "peerScore": 0, "portChannelScore": 0, "pubsubInfraVnScore": 0, "pubsubSessionScore": 0, "pubsubTransitConnScore": 0, "remoteInternetAvailScore": 0, "tcpConnScore": 0, "transitControlPlaneScore": 0, "transitServicesScore": 0, "vnExitScore": 0, "vnFcpScore": 0, "vnServiceScore": 0, "vnStatusScore": 0, "vniStatusScore": 0}, "featureFlagList": ["string"], "haLastResetReason": "string", "haStatus": "string", "id": "string", "ipv4Address": "string", "ipv6Address": "string", "lastBootTime": 0, "macAddress": "string", "maintenanceModeEnabled": true, "managementIpAddress": "string", "metricsDetails": {"airQualityScore": 0, "apCount": 0, "avgTemperature": 0, "cpuScore": 0, "cpuUtilization": 0, "discardInterfaces": ["string"], "discardScore": 0, "errorInterfaces": ["string"], "errorScore": 0, "freeMemoryBuffer": 0, "freeMemoryBufferScore": 0, "freeTimer": 0, "freeTimerScore": 0, "highLinkUtilizationInterfaces": ["string"], "interDeviceConnectedDownInterfaces": ["string"], "interDeviceLinkScore": 0, "interferenceScore": 0, "linkUtilizationScore": 0, "maxTemperature": 0, "memoryScore": 0, "memoryUtilization": 0, "noiseScore": 0, "overallHealthScore": 0, "packetPool": 0, "packetPoolScore": 0, "utilizationScore": 0, "wqePool": 0, "wqePoolScore": 0}, "name": "string", "osType": "string", "physicalPortCount": 0, "platformId": "string", "portCount": 0, "productVendor": "string", "redundancyMode": "string", "redundancyPeerState": "string", "redundancyPeerStateDerived": "string", "redundancyState": "string", "redundancyStateDerived": "string", "ringStatus": true, "serialNumber": "string", "siteHierarchy": "string", "siteHierarchyId": "string", "siteId": "string", "softwareVersion": "string", "stackType": "string", "switchPoeDetails": {"chassisCount": 0, "freePortCount": 0, "moduleCount": 0, "moduleDetails": [{"chassisId": "string", "interfacePowerMax": 0, "moduleFreePortCount": 0, "moduleId": "string", "modulePoePowerAllocated": 0, "modulePoePowerConsumed": 0, "modulePortCount": 0, "modulePowerBudget": 0, "modulePowerConsumed": 0, "modulePowerRemaining": 0, "moduleSystemPowerAllocated": 0, "moduleSystemPowerConsumed": 0, "moduleUsedPortCount": 0}], "poePowerAllocated": 0, "poePowerConsumed": 0, "poeVersion": "string", "portCount": 0, "powerBudget": 0, "powerConsumed": 0, "powerRemaining": 0, "systemPowerAllocated": 0, "systemPowerConsumed": 0, "usedPortCount": 0}, "tagNames": ["string"], "upTime": 0, "virtualPortCount": 0, "wiredClientCount": 0, "wirelessClientCount": 0}, "version": "string"}`


      .. raw:: html

        </div>



..  Status (Presently only deprecated)


.. Authors

Authors
~~~~~~~

- Rafael Campos (@racampos)



.. Extra links

Collection links
~~~~~~~~~~~~~~~~

.. raw:: html

  <p class="ansible-links">
    <a href="https://github.com/cisco-en-programmability/dnacenter-ansible/issues" aria-role="button" target="_blank" rel="noopener external">Issue Tracker</a>
    <a href="https://github.com/cisco-en-programmability/dnacenter-ansible" aria-role="button" target="_blank" rel="noopener external">Repository (Sources)</a>
  </p>

.. Parsing errors

